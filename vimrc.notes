


call plug#begin('~/.vim/plugged')
 
" vim colorschemes
Plug 'flazz/vim-colorschemes'

" vim-devicons (Icons for my sweet nerdtree)
Plug 'ryanoasis/vim-devicons'

" nerd tree
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" easy motion
Plug 'easymotion/vim-easymotion'

" vim wiki to make notes
Plug 'vimwiki/vimwiki'

call plug#end()			



" =========================== Plugins ==============================

" Nerdtree stuff 
let g:NERDTreeQuitOnOpen = 1
nnoremap <leader>n :NERDTreeToggle<CR>
nnoremap <leader>f :NERDTreeFind<CR>

" show nerd tree always on the right instead on the left
let g:NERDTreeWinPos = "right"

" Close the tab if NERDTree is the only window remaining in it.
autocmd BufEnter * if winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif
 
" ======================= Key-bindings ==========================

" Spell-check
nn <leader>s :setlocal spell! spell?<CR>

" Copy pasting (Using gvim to use inbuilt clipboards)
nnoremap <leader>p "+p
vnoremap <leader>y "+y

" Source vimrc
map <leader>v :source ~/.vimrc<CR>

" Spell Correction
imap <leader>l <c-g>u<Esc>[s1z=`]a<c-g>u
nmap <leader>l [s1z=<c-o>

" To toggle numbering
 nmap <leader>i :exec &nu==&rnu? "se nu!" : "se rnu!"<CR>

" nohl
nnoremap <silent><expr> <Leader>h (&hls && v:hlsearch ? ':nohls' : ':set hls')."\n"

" NAVIGATION KEYBINDINGS 

" tabs
nnoremap tn :tabnew<Space>
nnoremap tk :tabnext<CR>
nnoremap tj :tabprev<CR>
nnoremap th :tabfirst<CR>
nnoremap tl :tablast<CR>

" stay in normal mode after inserting a new line
noremap o o<Esc>
noremap O O<Esc>

" fast scrolling
nnoremap J 6j
nnoremap K 6k
vnoremap J 6j
vnoremap K 6k

" fast scrolling
nnoremap H 3h
nnoremap L 3l
vnoremap H 3h
vnoremap L 3l

" ============================ Switches/Misc =============================

" numbering
set rnu 
 
" Cursors
set cursorline
set cursorcolumn

" set timeoutlen=0
set notimeout ttimeout ttimeoutlen=40 
set mouse=a
set scrolloff=18 

set nocompatible
filetype plugin on
syntax on 

" Spelling 
set spell
set spelllang=en_us

" highlight matching braces
set showmatch

" How many tenths of a second to blink when matching brackets
set mat=0

" Use tab completion everywhere 
set wildmenu

" disable wrapping of long lines into multiple lines
" set nowrap

" history
set history=1000

" on some systems the backspace does not work as expected.
" this fixes the problem
set backspace=indent,eol,start

" encoding
set encoding=UTF-8

" set signcolumn=yes

"                       INDENTATION

set autoindent
set showmode 
set smartindent
filetype indent on 
set shiftwidth=4
set tabstop=4
set smarttab
set expandtab

"                       SEARCHING

" Ignorecase when searching
set ignorecase

" incremental search - Vim starts searching when we start typing
set incsearch

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch


"                       PERFORMANCE

" fix slow scrolling that occurs when using mouse and relative numbers
set lazyredraw

" ========================= Highlighting  ============================

"hi normal ctermbg=234 (Don't know what this does)
hi Cursor ctermbg=43 ctermfg=16 
hi CursorLine ctermbg=235 term=NONE cterm=NONE
hi CursorColumn ctermbg=17 term=NONE cterm=NONE
autocmd InsertEnter * highlight CursorLine ctermfg=None ctermbg=None
autocmd InsertLeave * highlight CursorLine ctermfg=None ctermbg=235
autocmd VimEnter * hi SpellBad cterm=None ctermfg=None ctermbg=23 
autocmd VimEnter * hi SpellCap cterm=None ctermfg=None ctermbg=95
" hi SignColumn ctermfg='white' ctermbg=16
hi Visual  ctermfg=16 ctermbg=14 
hi Search ctermfg=16 ctermbg=3 
 
" ================ Folds ============================

" ================ File management ==================
let mapleader="," 

colorscheme monokai-phoenix
 
" Turn off swap files
set noswapfile
set nobackup
set nowb
 
" reload files changed outside vim
set autoread
" Triger `autoread` when files changes on disk
autocmd FocusGained,BufEnter,CursorHold,CursorHoldI * if mode() != 'c' | checktime | endif
" Notification after file change
autocmd FileChangedShellPost *
  \ echohl WarningMsg | echo "File changed on disk. Buffer reloaded." | echohl None



" ====================================================================
